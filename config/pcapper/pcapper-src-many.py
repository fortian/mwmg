# CORE
# NRL 5520
# CORE service to setup PCapper monitoring at scenario start

import os
import sys
import json
import logging

from core.service import CoreService
from core.service import ServiceMode

class CaaS(CoreService):
    # A unique name is required, without spaces:
    name = "PCapper-Src"
    # You can create your own group here:
    group = "ProtoSvc"
    # Any services that want to steal IP addresses from interfaces need a
    # dependency UPON this service, so that they don't get the address before we
    # can read it.  This software doesn't have any dependencies, though.
    dependencies = ()
    # Validation check:
    # Note: This will detect PCapper instances from other services, such as
    # the "Pcapper-Dest" service.
    validate = ('pgrep -x pcapper',)
    meta = "monitors network traffic and logs/reports to collector(s)"
    # validation time (defaults to 0.125 seconds)
    # [N/A]
    # per-node directories
    dirs = ("")
    # Generated files (without a full path, this file goes in the node's dir,
    # e.g. /tmp/pycore.12345/n1.conf/):
    configs = (name + '.sh', )
    # List of startup commands (also may be generated during startup):
    startup = ('sh ' + configs[0],)
    # List of shutdown commands:
    # Note: This will clobber all PCapper services, including those started by
    # another service.
    shutdown = ('pkill -x pcapper')

    @classmethod
    def generate_config(cls, node, filename):
        """
        Run PCapper agent only on routing nodes
        """
        cmd = "#!/bin/sh\n# auto-generated by PCapper-Src CORE service\n\n"
        if 'Host' in node.name:
            cmd += "# Don't do anything on non-router hosts\n"
        else:
            cmd += "/usr/local/bin/pcapper -i eth0 -s ctrl0 -p 7074 -f pcapper-src.eth0.log &\n"
            cmd += "/usr/local/bin/pcapper -i eth1 -s ctrl0 -p 7075 -f pcapper-src.eth1.log &\n"
            if 'E2' in node.name:
                # This system has an eth2, whereas other gateways don't seem to.
                cmd += "/usr/local/bin/pcapper -i eth2 -s ctrl0 -p 7074 -f pcapper-src.eth2.log &\n"
            cmd += "/usr/local/bin/pcapper -i eth3 -s ctrl0 -p 7075 -f pcapper-src.eth3.log &\n"
        return cmd
